{"version":3,"file":"static/js/484.4a80b373.chunk.js","mappings":"iPAEaA,EAAaC,EAAAA,GAAAA,GAAH,2CAIVC,EAAaD,EAAAA,GAAAA,GAAH,qEAKVE,EAAgBF,EAAAA,GAAAA,EAAH,+b,SC0B1B,EAhCgB,WACd,IAAQG,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAqBN,GAClBO,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACPJ,EAAWI,EACZ,IACAC,OAAM,YAAkB,IAAfC,EAAc,EAAdA,QACRC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAACV,KAGF,8BACGG,EAAQU,QACP,SAACjB,EAAD,UACGO,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,OAAQC,EAApB,EAAoBA,GAApB,OACX,UAACnB,EAAD,YACE,qCAAakB,MACb,uBAAID,MAFWE,EADN,OAQf,SAAClB,EAAD,iDAIP,C,4LC9BKmB,EAAWC,EAAAA,GAAAA,OAAa,CAAEC,QAAS,kCAC5BC,EAAW,mCAAG,oGACFH,EAASI,IALZ,qBAK+B,CACjDC,OAAQ,CAAEC,QAAS,sCAFI,cACnBC,EADmB,yBAIlBA,EAASC,KAAKlB,SAJI,2CAAH,qDAOXmB,EAAkB,mCAAG,WAAMC,GAAN,uFACTV,EAASI,IAAT,WAXP,gBAWqC,CACnDC,OAAQ,CACNC,QAAS,mCACTK,MAAOD,KAJqB,cAC1BH,EAD0B,yBAOzBA,EAASC,KAAKlB,SAPW,2CAAH,sDAUlBsB,EAAe,mCAAG,WAAMb,GAAN,uFACNC,EAASI,IAAT,iBAAuBL,GAAM,CAClDM,OAAQ,CACNC,QAAS,sCAHgB,cACvBC,EADuB,yBAMtBA,EAASC,MANa,2CAAH,sDASfK,EAAiB,mCAAG,WAAMd,GAAN,uFACRC,EAASI,IAAT,iBAAuBL,EAAvB,YAAqC,CAC1DM,OAAQ,CACNC,QAAS,sCAHkB,cACzBC,EADyB,yBAMxBA,EAASC,MANe,2CAAH,sDASjBpB,EAAoB,mCAAG,WAAMW,GAAN,uFACXC,EAASI,IAAT,iBAAuBL,EAAvB,YAAqC,CAC1DM,OAAQ,CACNC,QAAS,sCAHqB,cAC5BC,EAD4B,yBAM3BA,EAASC,MANkB,2CAAH,qD","sources":["components/Reviews/Reviews.style.js","components/Reviews/Reviews.jsx","components/servise/serviseAPI.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  display: block;\n`\n\nexport const ReviewItem = styled.li`\n  margin-left: 10px;\n  margin-right: 10px;\n`\n\nexport const ReviewAbsence = styled.p`\n  display: flex;\n  justify-content: center;\n  font-size: 50px;\n\n  text-shadow:\n    -1px -1px #FFF,\n    -2px -2px #FFF,\n    -1px 1px #FFF,\n    -2px 2px #FFF,\n    1px 1px #FFF,\n    2px 2px #FFF,\n    1px -1px #FFF,\n    2px -2px #FFF,\n    -3px -3px 2px #BBB,\n    -3px 3px 2px #BBB,\n    3px 3px 2px #BBB,\n    3px -3px 2px #BBB;\n  color: steelblue;\n  transition: all 1s;\n\n  :hover {\n    color: gold;\n  }\n\n`\n","import { searchMovieByReviews } from '../servise/serviseAPI';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewList, ReviewItem, ReviewAbsence } from './Reviews.style';\n\nconst Reviews = () => {\n  const { moviesId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    searchMovieByReviews(moviesId)\n      .then(({ results }) => {\n        setReviews(results);\n      })\n      .catch(({ message }) => {\n        console.log(message);\n      });\n  }, [moviesId]);\n\n  return (\n    <>\n      {reviews.length ? (\n        <ReviewList>\n          {reviews.map(({ content, author, id }) => (\n            <ReviewItem key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </ReviewItem>\n          ))}\n        </ReviewList>\n      ) : (\n        <ReviewAbsence>We have no reviews for this movie</ReviewAbsence>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst trandingMovie = 'trending/movie/day';\nconst nameMovie = 'search/movie';\n\nconst movieApi = axios.create({ baseURL: 'https://api.themoviedb.org/3/' });\nexport const moviesFetch = async () => {\n  const response = await movieApi.get(trandingMovie, {\n    params: { api_key: 'fe8296f47fdee638ac9cbbf0db61e69d' },\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesByName = async searchQuery => {\n  const response = await movieApi.get(`/${nameMovie}`, {\n    params: {\n      api_key: 'f9515d5c748130764d8b19c2d2137bc3',\n      query: searchQuery,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMovieById = async id => {\n  const response = await movieApi.get(`/movie/${id}`, {\n    params: {\n      api_key: 'f9515d5c748130764d8b19c2d2137bc3',\n    },\n  });\n  return response.data;\n};\n\nexport const searchMovieByCast = async id => {\n  const response = await movieApi.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: 'f9515d5c748130764d8b19c2d2137bc3',\n    },\n  });\n  return response.data;\n};\n\nexport const searchMovieByReviews = async id => {\n  const response = await movieApi.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: 'f9515d5c748130764d8b19c2d2137bc3',\n    },\n  });\n  return response.data;\n};\n"],"names":["ReviewList","styled","ReviewItem","ReviewAbsence","moviesId","useParams","useState","reviews","setReviews","useEffect","searchMovieByReviews","then","results","catch","message","console","log","length","map","content","author","id","movieApi","axios","baseURL","moviesFetch","get","params","api_key","response","data","searchMoviesByName","searchQuery","query","searchMovieById","searchMovieByCast"],"sourceRoot":""}