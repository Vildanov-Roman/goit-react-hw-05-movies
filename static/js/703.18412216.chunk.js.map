{"version":3,"file":"static/js/703.18412216.chunk.js","mappings":"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","sources":["components/Movies/Movies.style.js","components/Movies/MovieDetails.jsx","components/servise/serviseAPI.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  position: relative;\n`\nexport const WrapTitle = styled.div`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n  justify-content: center;\n  \n`\nexport const WrapDescription = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 25%;\n`\n\nexport const Error = styled.p`\n  color: black;\n  text-align: center;\n  font-size: xx-large;  \n`\n\nexport const MovieLink = styled(Link)`\n  width: 80px;\n  color:darkseagreen; \n  text-align: center;\n  padding: 5px;\n  background: rgba(129, 129, 129, 0.119);\n\n\n  border: 1px solid black;\n\n  position: absolute;\n  left: 20px;\n\n  :hover,\n  :fokus {\n    color: red;\n  }\n  `\n\nexport const MovieInfo = styled(NavLink)`\n  padding: 12px;\n  width: 80px;\n  cursor: pointer;\n  background: #e9e9e9;\n  color: black;\n  transition: 0.5s ease;\n  border-radius: 10px;\n  text-align: center;\n  transition: 0.1s ease;\n  box-shadow: 0px 3px 3px 3px rgba(0, 0, 0, 0.7);\n\n  &.active {\n    background-color: #a9a9a9;\n    color: black;\n    box-shadow: inset 0px 3px 3px 4px rgba(0, 0, 0, 0.5);\n  }\n\n      :hover,\n      :focus {\n        background: #a9a9a9\n        transform: translateY(2px);\n    box-shadow: 0px 7px 8px -5px rgba(0, 0, 0, 0.2),\n      0px 8px 9px 0px rgba(0, 0, 0, 0.14), 0px 5px 15px 0px rgba(0, 0, 0, 0.12);\n      }\n\n      :active {\n        transform: translateY(4px);\n        box-shadow: inset 0px 3px 3px 4px rgba(0, 0, 0, 0.5);\n  }\n`\n","import { searchMovieById } from '../servise/serviseAPI';\nimport { useEffect, useState, useRef } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  Wrapper,\n  WrapTitle,\n  WrapDescription,\n  Error,\n  MovieLink,\n  MovieInfo,\n} from './Movies.style';\n\nconst MovieDetails = () => {\n  const { moviesId } = useParams();\n  const location = useLocation();\n  const refLocation = useRef(location.state?.location);\n  const from = location.state?.from ?? '/';\n  const [movieById, setMovieById] = useState();\n\n  useEffect(() => {\n    searchMovieById(moviesId)\n      .then(response => {\n        setMovieById(response);\n      })\n      .catch(({ message }) => {\n        console.log(message);\n      });\n  }, [moviesId]);\n\n  if (!movieById) {\n    return <Error>404 Not Found</Error>;\n  }\n  const { title, poster_path, release_date, vote_average, overview, genres } =\n    movieById;\n  return (\n    <Wrapper>\n      <MovieLink to={refLocation.current ?? '/'}>Go back</MovieLink>\n      <WrapTitle>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n        />\n        <WrapDescription>\n          <h2>\n            {title}({new Date(release_date).getFullYear()})\n          </h2>\n          <p>User Score: {Math.floor(vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genres ? genres.map(genre => genre.name).join(' ') : '-'}</p>\n        </WrapDescription>\n      </WrapTitle>\n      <Wrapper>\n        <WrapTitle>\n          <MovieInfo to=\"cast\" state={{ from: from }}>\n            Cast\n          </MovieInfo>\n          <MovieInfo to=\"reviews\" state={{ from: from }}>\n            Reviews\n          </MovieInfo>\n        </WrapTitle>\n        <Outlet />\n      </Wrapper>\n    </Wrapper>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst trandingMovie = 'trending/movie/day';\nconst nameMovie = 'search/movie';\n\nconst movieApi = axios.create({ baseURL: 'https://api.themoviedb.org/3/' });\nexport const moviesFetch = async () => {\n  const response = await movieApi.get(trandingMovie, {\n    params: { api_key: 'fe8296f47fdee638ac9cbbf0db61e69d' },\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesByName = async searchQuery => {\n  const response = await movieApi.get(`/${nameMovie}`, {\n    params: {\n      api_key: 'f9515d5c748130764d8b19c2d2137bc3',\n      query: searchQuery,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMovieById = async id => {\n  const response = await movieApi.get(`/movie/${id}`, {\n    params: {\n      api_key: 'f9515d5c748130764d8b19c2d2137bc3',\n    },\n  });\n  return response.data;\n};\n\nexport const searchMovieByCast = async id => {\n  const response = await movieApi.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: 'f9515d5c748130764d8b19c2d2137bc3',\n    },\n  });\n  return response.data;\n};\n\nexport const searchMovieByReviews = async id => {\n  const response = await movieApi.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: 'f9515d5c748130764d8b19c2d2137bc3',\n    },\n  });\n  return response.data;\n};\n"],"names":["Wrapper","styled","WrapTitle","WrapDescription","Error","MovieLink","Link","MovieInfo","NavLink","moviesId","useParams","location","useLocation","refLocation","useRef","state","from","useState","movieById","setMovieById","useEffect","searchMovieById","then","response","catch","message","console","log","title","poster_path","release_date","vote_average","overview","genres","to","current","src","alt","Date","getFullYear","Math","floor","map","genre","name","join","movieApi","axios","baseURL","moviesFetch","get","params","api_key","data","results","searchMoviesByName","searchQuery","query","id","searchMovieByCast","searchMovieByReviews"],"sourceRoot":""}