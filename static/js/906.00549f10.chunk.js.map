{"version":3,"file":"static/js/906.00549f10.chunk.js","mappings":"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","sources":["components/Movies/MoviesList.style.js","components/Movies/MoviesList.jsx","components/pages/MovieSearch.style.js","components/pages/Movies.jsx","components/servise/serviseAPI.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n\nexport const MovieList = styled.ul`\n  display: flex;\n  gap: 15px;\n  flex-wrap: wrap;\n  justify-content: center;\n  `\n\nexport const MovieItem = styled.li`\n  transition: 0.1s ease;\n  box-shadow: 0px 3px 3px 3px rgba(0, 0, 0, 0.7);\n\n    :hover,\n    :focus {\n      transform: translateY(2px);\n  box-shadow: 0px 7px 8px -5px rgba(0, 0, 0, 0.2),\n    0px 8px 9px 0px rgba(0, 0, 0, 0.14), 0px 5px 15px 0px rgba(0, 0, 0, 0.12);\n    }\n\n    :active {\n      transform: translateY(8px);\n      box-shadow: inset 0px 0px 3px 4px rgba(0, 0, 0, 0.5);\n    }\n`\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  width: 150px;\n\n  :hover,\n  :fokus {\n    color: red;\n  }\n`\n\nexport const LinkDescription = styled.span`\n  padding: 10px;\n`\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport image from '../../img/no_poster.jpg';\nimport {\n  MovieList,\n  MovieItem,\n  MovieLink,\n  LinkDescription,\n} from './MoviesList.style';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MovieList>\n      {movies &&\n        movies.map(({ id, name, title, poster_path }) => (\n          <MovieItem key={id}>\n            <MovieLink to={`/movies/${id}`} state={{ location }}>\n              {poster_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                  alt={title}\n                  width=\"150\"\n                  height=\"200\"\n                />\n              ) : (\n                <img src={image} alt={name} width=\"150\" height=\"200\" />\n              )}\n              <LinkDescription>{name || title}</LinkDescription>\n            </MovieLink>\n          </MovieItem>\n        ))}\n    </MovieList>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`\nexport const Input = styled.input`\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n  0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`\n\nexport const SearchBtn = styled.button`\n  padding: 3px;\n  margin-left: 5px;\n  width: 60px;\n  cursor: pointer;\n  background: #e9e9e9;\ncolor: black;\ntransition: 0.5s ease;\nborder-radius: 4px;\ntext-align: center;\ntransition: 0.1s ease;\nbox-shadow: 0px 2px 0px 2px rgba(0, 0, 0, 0.7);\n\n    :hover,\n    :focus {\n      background: #a9a9a9\n      transform: translateY(1px);\n  box-shadow: none;\n    }\n\n    :active {\n      transform: translateY(2px);\n      box-shadow: inset 0px 1px 0px 2px rgba(0, 0, 0, 0.5);\n    }\n`\n","import { MoviesList } from '../Movies/MoviesList';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMoviesByName } from '../servise/serviseAPI';\nimport { Form, Input, SearchBtn } from './MovieSearch.style';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const fetchMovie = useCallback(async () => {\n    if (!query) {\n      return;\n    }\n    const response = await searchMoviesByName(query);\n    setMovies(response);\n  }, [query]);\n\n  const handleSubmit = element => {\n    element.preventDefault();\n    setSearchParams({ query: searchQuery });\n  };\n  useEffect(() => {\n    fetchMovie();\n  }, [fetchMovie, query]);\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          placeholder=\"Enter your query here, please\"\n          onChange={element => setSearchQuery(element.target.value)}\n        />\n        <SearchBtn type=\"submit\">Search</SearchBtn>\n      </Form>\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst trandingMovie = 'trending/movie/day';\nconst nameMovie = 'search/movie';\n\nconst movieApi = axios.create({ baseURL: 'https://api.themoviedb.org/3/' });\nexport const moviesFetch = async () => {\n  const response = await movieApi.get(trandingMovie, {\n    params: { api_key: 'fe8296f47fdee638ac9cbbf0db61e69d' },\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesByName = async searchQuery => {\n  const response = await movieApi.get(`/${nameMovie}`, {\n    params: {\n      api_key: 'f9515d5c748130764d8b19c2d2137bc3',\n      query: searchQuery,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMovieById = async id => {\n  const response = await movieApi.get(`/movie/${id}`, {\n    params: {\n      api_key: 'f9515d5c748130764d8b19c2d2137bc3',\n    },\n  });\n  return response.data;\n};\n\nexport const searchMovieByCast = async id => {\n  const response = await movieApi.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: 'f9515d5c748130764d8b19c2d2137bc3',\n    },\n  });\n  return response.data;\n};\n\nexport const searchMovieByReviews = async id => {\n  const response = await movieApi.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: 'f9515d5c748130764d8b19c2d2137bc3',\n    },\n  });\n  return response.data;\n};\n"],"names":["MovieList","styled","MovieItem","MovieLink","Link","LinkDescription","MoviesList","movies","location","useLocation","map","id","name","title","poster_path","to","state","src","alt","width","height","image","Form","Input","SearchBtn","useState","searchQuery","setSearchQuery","setMovies","useSearchParams","searchParams","setSearchParams","query","get","fetchMovie","useCallback","searchMoviesByName","response","useEffect","onSubmit","element","preventDefault","type","placeholder","onChange","target","value","movieApi","axios","baseURL","moviesFetch","params","api_key","data","results","searchMovieById","searchMovieByCast","searchMovieByReviews"],"sourceRoot":""}