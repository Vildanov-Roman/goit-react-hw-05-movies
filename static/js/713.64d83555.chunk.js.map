{"version":3,"file":"static/js/713.64d83555.chunk.js","mappings":"yPAEaA,EAAWC,EAAAA,GAAAA,GAAH,wGAMRC,EAAWD,EAAAA,GAAAA,GAAH,qLAORE,EAAkBF,EAAAA,GAAAA,IAAH,yC,SC6B5B,EAtCa,WACX,IAAQG,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAYA,OAVAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBN,GACfO,MAAK,YAAe,IAAZJ,EAAW,EAAXA,KACPC,EAAQD,EACT,IACAK,OAAM,YAAkB,IAAfC,EAAc,EAAdA,QACRC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAACT,KAGF,SAACJ,EAAD,UACGO,GACCA,EAAKS,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,KAAMC,EAAlC,EAAkCA,GAAlC,OACP,UAAClB,EAAD,WACGgB,GACC,gBACEG,IAAG,yCAAoCH,GACvCI,IAAKH,KAGP,gBAAKE,IAAKE,EAAOD,IAAKH,EAAMK,MAAM,MAAMC,OAAO,SAEjD,UAACtB,EAAD,YACE,wBAAKgB,KACL,yCACA,uBAAIF,SAZOG,EADR,KAmBhB,C,4LCrCKM,EAAWC,EAAAA,GAAAA,OAAa,CAAEC,QAAS,kCAC5BC,EAAW,mCAAG,oGACFH,EAASI,IALZ,qBAK+B,CACjDC,OAAQ,CAAEC,QAAS,sCAFI,cACnBC,EADmB,yBAIlBA,EAASC,KAAKC,SAJI,2CAAH,qDAOXC,EAAkB,mCAAG,WAAMC,GAAN,uFACTX,EAASI,IAAT,WAXP,gBAWqC,CACnDC,OAAQ,CACNC,QAAS,mCACTM,MAAOD,KAJqB,cAC1BJ,EAD0B,yBAOzBA,EAASC,KAAKC,SAPW,2CAAH,sDAUlBI,EAAe,mCAAG,WAAMnB,GAAN,uFACNM,EAASI,IAAT,iBAAuBV,GAAM,CAClDW,OAAQ,CACNC,QAAS,sCAHgB,cACvBC,EADuB,yBAMtBA,EAASC,MANa,2CAAH,sDASfxB,EAAiB,mCAAG,WAAMU,GAAN,uFACRM,EAASI,IAAT,iBAAuBV,EAAvB,YAAqC,CAC1DW,OAAQ,CACNC,QAAS,sCAHkB,cACzBC,EADyB,yBAMxBA,EAASC,MANe,2CAAH,sDASjBM,EAAoB,mCAAG,WAAMpB,GAAN,uFACXM,EAASI,IAAT,iBAAuBV,EAAvB,YAAqC,CAC1DW,OAAQ,CACNC,QAAS,sCAHqB,cAC5BC,EAD4B,yBAM3BA,EAASC,MANkB,2CAAH,qD","sources":["components/Cast/Cast.style.js","components/Cast/Cast.jsx","components/servise/serviseAPI.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n  justify-content: center;\n`\nexport const CastItem = styled.li`\n  max-width: 200px;\n\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n      0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`\n\nexport const CastDiscription = styled.div`\n  margin: 10px;\n`\n","import { searchMovieByCast } from '../servise/serviseAPI';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport image from '../../img/CastNoFoto.jpg';\nimport { CastList, CastItem, CastDiscription } from './Cast.style';\n\nconst Cast = () => {\n  const { moviesId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    searchMovieByCast(moviesId)\n      .then(({ cast }) => {\n        setCast(cast);\n      })\n      .catch(({ message }) => {\n        console.log(message);\n      });\n  }, [moviesId]);\n\n  return (\n    <CastList>\n      {cast &&\n        cast.map(({ character, profile_path, name, id }) => (\n          <CastItem key={id}>\n            {profile_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                alt={name}\n              />\n            ) : (\n              <img src={image} alt={name} width=\"200\" height=\"300\" />\n            )}\n            <CastDiscription>\n              <h3>{name}</h3>\n              <h4>Character: </h4>\n              <p>{character}</p>\n            </CastDiscription>\n          </CastItem>\n        ))}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst trandingMovie = 'trending/movie/day';\nconst nameMovie = 'search/movie';\n\nconst movieApi = axios.create({ baseURL: 'https://api.themoviedb.org/3/' });\nexport const moviesFetch = async () => {\n  const response = await movieApi.get(trandingMovie, {\n    params: { api_key: 'f9515d5c748130764d8b19c2d2137bc3' },\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesByName = async searchQuery => {\n  const response = await movieApi.get(`/${nameMovie}`, {\n    params: {\n      api_key: 'f9515d5c748130764d8b19c2d2137bc3',\n      query: searchQuery,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMovieById = async id => {\n  const response = await movieApi.get(`/movie/${id}`, {\n    params: {\n      api_key: 'f9515d5c748130764d8b19c2d2137bc3',\n    },\n  });\n  return response.data;\n};\n\nexport const searchMovieByCast = async id => {\n  const response = await movieApi.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: 'f9515d5c748130764d8b19c2d2137bc3',\n    },\n  });\n  return response.data;\n};\n\nexport const searchMovieByReviews = async id => {\n  const response = await movieApi.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: 'f9515d5c748130764d8b19c2d2137bc3',\n    },\n  });\n  return response.data;\n};\n"],"names":["CastList","styled","CastItem","CastDiscription","moviesId","useParams","useState","cast","setCast","useEffect","searchMovieByCast","then","catch","message","console","log","map","character","profile_path","name","id","src","alt","image","width","height","movieApi","axios","baseURL","moviesFetch","get","params","api_key","response","data","results","searchMoviesByName","searchQuery","query","searchMovieById","searchMovieByReviews"],"sourceRoot":""}